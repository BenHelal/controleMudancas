{% extends 'base.html.twig' %}

{% block title %}Hello GestorController!
{% endblock %}

{% block body %}
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">

	<style>
		@import url('https://unpkg.com/open-props/open-props.min.css');
		@import url('https://unpkg.com/open-props/normalize.min.css');

		#main {
			box-sizing: border-box;
			width: 66ch;
		}


		.custom-card {
			width: 50%; /* Set the width of your card */
			margin: 50px auto; /* Adjust the margin as needed */
			background-color: #fff; /* Set the background color */
			padding: 20px; /* Adjust the padding as needed */
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Add a box shadow for a card-like appearance */
			border-radius: 10px; /* Set the border radius as needed */
			z-index: 999999; /* Set a high z-index for the card */
		}


		.download-button {
			position: relative;
			border-width: 0;
			color: white;
			font-size: 15px;
			font-weight: 600;
			border-radius: 4px;
			z-index: 1;
		}

		.download-button .docs {
			display: flex;
			align-items: center;
			justify-content: space-between;
			gap: 10px;
			min-height: 40px;
			padding: 0 10px;
			border-radius: 4px;
			z-index: 1;
			background-color: #242a35;
			border: solid 1px #e8e8e82d;
			transition: all 0.5s cubic-bezier(0.77, 0, 0.175, 1);
		}

		.download-button:hover {
			box-shadow: rgba(0, 0, 0, 0.25) 0 54px 55px, rgba(0, 0, 0, 0.12) 0 -12px 30px, rgba(0, 0, 0, 0.12) 0 4px 6px, rgba(0, 0, 0, 0.17) 0 12px 13px, rgba(0, 0, 0, 0.09) 0 -3px 5px;
		}

		.download {
			position: absolute;
    		inset: 0;
    		display: flex;
    		align-items: center;
    		justify-content: center;
    		max-width: 20%;
    		/* margin: revert; */
    		margin-left: 80%;
    		z-index: -1;
    		border-radius: 4px;
    		transform: translateX(0%);
    		background-color: #01e056;
    		border: solid -7px #01e0572d;
    		transition: all 0.5s cubic-bezier(0.77, 0, 0.175, 1);
		}


		.download-button:hover .download {
			transform: translateX(100%)
		}

		.download svg polyline,
		.download svg line {
			animation: docs 1s infinite;
		}

		@keyframes docs {
			0% {
				transform: translateY(0%);
			}

			50% {
				transform: translateY(-15%);
			}

			100% {
				transform: translateY(0%);
			}
		}

		#liD{
			    margin-bottom: -35px;
		}
	</style>

	{{ include('flowBoard.html.twig') }}


	<h1 style="text-align: center;">Requisitos</h1>
	<br>
	<hr style="width: 100%; margin-top: 10px; margin-bottom: 10px;">


	{% if muds.iniciar is null %}
		{% if m.mangerMudancas == person %}

			<div
				class="custom-card">
				<!-- Your card content goes here -->
				{{ form_start(formInit, { 'attr': {'class':'form-group', 'id':'test'}}) }}

				<div class="col-md-12 mb-3">
					{{ form_label(formInit.iniciar) }}
					{{ form_widget(formInit.iniciar,{'attr':{'class':'form-control','rows': '4','id':'testnomeMudanca'}}) }}
				</div>
				<div class="col-md-12 mb-3">
					{{ form_label(formInit.dateInicio) }}
					{{ form_widget(formInit.dateInicio,{'attr':{'class':'date form-control','rows': '4','id':'testnomeMudanca'}}) }}
				</div>

			{% if iTLA == true and (m.orderNumber is not null and m.orderNumber != 0) %}
				<button class="btn btn-info mt-2 text-white">
					Enviar
				</button>
				{% else %}

			{% endif %}
				{{ form_end(formInit) }}
			</div>
		{% else %}
			Ainda não começou
		{% endif %}
	{% endif %}

	<div class="row">

		{% set yourVariable = "false" %}
		
		{% if sd is null %}
			{% else %}
				{% for s in sd %}
					{% if s.approveSol == "Reprovar" %} 
						{% set yourVariable = "false" %}
					{% elseif s.approveSol == "Approvar" %} 
						{% set yourVariable = "true" %} 
					{% else %} 
						{% set yourVariable = "true" %} 
					{% endif %}
				{% endfor %}
			{% endif %}
			<form class="form-group" action="{{path('app_software_gestor_add_documentation',{'id':m.id} )}}" enctype="multipart/form-data" method="post">
		<div class="row" name="test2" id="test2"></div>
		<div class="col-md-12 mb-3">
			<input id="btnSubsq" class="btn btn-info mt-2 text-white" type="submit" value="Salvar"/>
		</div>
	</form>

	{% if yourVariable == "false"  and muds.iniciar != null %}
		{% set doc = '0' %}
		{% if m.mangerMudancas  == person %}
			<!-- HTML !-->
			<a id="btAddRe" class="btn btn-info mt-2 text-white" onclick="myFunction()" role="button">Adicionar novo requisito</a>
			

			{% if iaPerm %}
				<a style="margin-left: 10px" id="btnIA" class="btn btn-info mt-2 text-white" data-toggle="modal" data-target="#iagenReq" role="button">Use IA para gerar requisitos</a>

				<!-- Modal LGPD -->
			<div class="modal fade" id="iagenReq" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
				<form class="form-group" action="{{path('app_software_gestor_IA_documentation',{'id':m.id} )}}"  onsubmit="return validateInput()" enctype="multipart/form-data" method="post">
					<div class="modal-dialog" role="document">
						<div class="modal-content">
							<div class="modal-header">
								<h4 class="modal-title" id="exampleModalLongTitle">Gerar Documentações</h4>
								<button type="button" class="close" data-dismiss="modal" aria-label="Close">
									<span aria-hidden="true">&times;</span>
								</button>
							</div>
							<div class="modal-body">
								<h5>
									Política de Confidencialidade:</h5>
								</br>
								<p>
									<ul>
										<li>

											Os utilizadores estão proibidos de divulgar qualquer informação relacionada com clientes, fornecedores ou qualquer detalhe relacionado com custos dentro desta campo. Isso inclui, mas não se limita a, nomes, endereços, informações financeiras ou qualquer outro detalhe identificativo.
										</li>
										<li>
											Os utilizadores só podem fornecer descrições gerais de ideias ou conceitos que não revelem informações específicas sobre clientes, fornecedores ou custos. Essas descrições devem ser suficientemente abstratas para evitar a identificação de qualquer entidade específica ou informação financeira.
										</li>
										<li>
											Os utilizadores são responsáveis por garantir que qualquer informação que forneçam esteja em conformidade com esta política. As violações podem resultar na remoção do conteúdo e na possível suspensão do acesso à plataforma.
										</li>
										<li>
											Os utilizadores devem usar discrição e evitar discutir clientes específicos, fornecedores ou detalhes financeiros em qualquer comunicação ou interação dentro desta plataforma.
										</li>
										<li>
											Quaisquer questões ou preocupações relacionadas com esta política devem ser dirigidas aos administradores da plataforma para esclarecimento e orientação.
										</li>
										<li>Esta política foi elaborada para proteger a confidencialidade de informações sensíveis e garantir o cumprimento de normas legais e éticas. Espera-se que os utilizadores cumpram estas diretrizes em todos os momentos.
										</li>
									</ul>
								</p>
								</br>
								<h5>IA Gerar Documentações:</h5>
								</br>
								<div class="row">
									<div id="div3" class="col-md-12 mb-3">
										<label for="{{m.id}}desc">Descrições gerais de ideias</label>
										<textarea id="{{m.id}}desc"  class="form-control"  placeholder="descrições gerais de ideias....." name="{{m.id}}desc" rows="4" cols="50"></textarea>
									</div>
									<div id="div3" class="col-md-12 mb-3">
										<input type="checkbox" id="c1" name="c1" value="user case and">
										<label for="c1">Caso de usuário</label>
									</div>
									<div id="div3" class="col-md-12 mb-3">
										<input type="checkbox" id="c2" name="c2" value="diagram of class and">
										<label for="c2">Diagrama de classe</label>
									</div>
									<div id="div3" class="col-md-12 mb-3">
										<input type="checkbox" id="c3" name="c3" value="todo list and">
										<label for="c3">Lista de afazeres</label>
									</div>
									<div id="div3" class="col-md-12 mb-3">
										<input type="checkbox" id="c4" name="c4" value="scenario of test and">
										<label for="c4">Cenário de teste</label>
									</div>
									
									<div id="div3" class="col-md-12 mb-3">
										<input type="checkbox" id="c5" name="c5" value="and translate to english">
										<label for="c5">Traduzir para o inglês</label>
									</div>
								</div>
							</div>
			
							<div class="modal-footer">
								<button type="button" class="btn btn-info mt-2 text-white btn-secondary" data-dismiss="modal">Cancelar</button>
								<button type="submit" class="btn btn-info mt-2 text-white btn-secondary" class="btn btn-info mt-2 text-white">
										Enviar
								</button>
							</div>
						</div>
					</div>
				</form>
			</div>
			<script>
  				document.addEventListener("DOMContentLoaded", function() {
  				  var btn = document.getElementById("btnIA");
  				  var timeout = Math.floor(Math.random() * (60000 - 30000)) + 30000; // Random time between 30s and 1min
  				  btn.disabled = true;
  				  setTimeout(function() {
  				    btn.disabled = false;
  				  }, timeout);
  				});
        		function validateInput() {
        		    var input = document.getElementById("{{m.id}}desc").value;
        		    var strings = input.split(" ");
        		    if (strings.length < 10) {
        		        alert("A entrada deve conter mais de 10 palavras.");
        		    }
        		}
    		</script>
{% endif %}
		{% endif %}
	{% endif %}
	
	<a href="javascript:void(0);" class="scroll-button" id="scrollButton" >
    <span class="arrow-up"></span>
</a>
	<br>
	<hr style="width: 100%; margin-top: 10px; margin-bottom: 20px;">
	<br>
	<br>

		{% if sd is null %}
			{% else %}
				{% for s in sd %}
					<div id="{{s.id}}" class="row col-md-12 mb-3 d-flex justify-content-between">
						<div id="div" class="col-md-3 mb-3">
							<label for="1">Requisito</label>
							<input class="form-control" id="{{s.id}}" name="{{s.id}}" value="{{s.step}}" type="text" readonly/>
						</div>
						<div id="div3" class="col-md-3 mb-3">
							<label for="{{s.id}}desc">Comentário</label>
							<input id="{{s.id}}desc" class="form-control" name="{{s.id}}desc" value="{{s.comment}}" type="text" readonly/>
						</div>
						<div id="div2" class="col-md-4 mb-3">
							<label for="{{s.id}}date">Data de Levantamento</label><br>
							<input id="{{s.id}}date" name="{{s.id}}date" value="{{s.date|date('d-m-Y')}}" style="width: 100%" type="text" readonly/>
						</div>

						<div class="col-md-6 mb-3">
							<div id="div6" class="col-md-3 mb-3">
									<label for="{{s.id}}file">Aprovação</label>
									<input id="{{s.id}}stat" name="{{s.id}}stat" 
									{% if s.approveSol != null  %}
										 {% if s.dateClientApp == null %}  
											{% set yourVariable = "false" %} value="{{s.approveSol}}" style="width: 100%; background-color: red;" 
										{% elseif s.dateClientApp != null and  s.dateClientRep != null and s.approveSol != "Approvar"  %} 
											{% set yourVariable = "true" %} value="Aprovado" style="width: 100%; background-color: #20c997;" 
										{% elseif s.dateClientApp != null and s.dateClientRep == null and s.approveSol != "Approvar" %} 
											{% set yourVariable = "true" %} {% if s.approveSol == "Approvar" %}value="Aprovado" 
												{% elseif s.approveSol == "Reprovar"  %}
													value="Reprovado" 
											{% endif %}style="width: 100%; background-color: red;"  
										{% elseif s.dateClientApp != null and s.dateClientRep == null and s.approveSol == "Approvar" %} 
											{% set yourVariable = "true" %} {% if s.approveSol == "Approvar" %}value="Aprovado" 
												{% elseif s.approveSol == "Reprovar"  %}
													value="Reprovado" 
											{% endif %} style="width: 100%; background-color: #20c997;"  
										{% else %} 
											{% set yourVariable = "true" %} 
										{% endif %}
									{% endif %}
										 type="text" readonly/>
							</div>
										<div class="col-md-3 mb-3">
											{% if s.dateClientApp != null %}
												<label>Data e hora de aprovação do cliente:<br> {{s.dateClientApp|date('d-m-Y H:i:s') }}</label> <br>
											{% endif %}
											<br>
											{% if s.dateClientRep != null %}
												<label>Data e hora da aprovação do Change Request: {{s.dateClientRep|date('d-m-Y H:i:s') }}</label> <br>
											{% endif %}
										</div>
								</div>
						{% if s.doc != null %}
							<div class="col-md-6 mb-3">
								<label>Anexo da Especificação</label><br>
								<ul>
									{% for key, f in files %}
										{% if key == s.id %}
										    {% for file in f %}
										    <li id="liD">
										        <button onclick="location.href='{{ asset('assets/') }}{{ m.id }}/documentation/{{ s.id }}/{{ file }}'" class="download-button">
										            <div class="docs">
										                <svg class="css-i6dzq1" stroke-linejoin="round" stroke-linecap="round" fill="none" stroke-width="2" stroke="currentColor" height="20" width="20" viewbox="0 0 24 24">
										                    <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
										                    <polyline points="14 2 14 8 20 8"></polyline>
										                    <line y2="13" x2="8" y1="13" x1="16"></line>
										                    <line y2="17" x2="8" y1="17" x1="16"></line>
										                    <polyline points="10 9 9 9 8 9"></polyline>
										                </svg>
										                {{ file }}
										            </div>
										            <div class="download">
										                <svg class="css-i6dzq1" stroke-linejoin="round" stroke-linecap="round" fill="none" stroke-width="2" stroke="currentColor" height="24" width="24" viewbox="0 0 24 24">
										                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
										                    <polyline points="7 10 12 15 17 10"></polyline>
										                    <line y2="3" x2="12" y1="15" x1="12"></line>
										                </svg>
										            </div>
										        </button>
										    </li>
										    <br>
										    <br>
												
											{% endfor %}
										{% endif %}
									{% endfor %}


										    <li id="liD">
										<button onclick="location.href='{{path('download_zip',{'id':m.id,'sId': s.id} )}}'" class="download-button">
											<div class="docs">
												<svg class="css-i6dzq1" stroke-linejoin="round" stroke-linecap="round" fill="none" stroke-width="2" stroke="currentColor" height="20" width="20" viewbox="0 0 24 24">
													<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
													<polyline points="14 2 14 8 20 8"></polyline>
													<line y2="13" x2="8" y1="13" x1="16"></line>
													<line y2="17" x2="8" y1="17" x1="16"></line>
													<polyline points="10 9 9 9 8 9"></polyline>
												</svg>Anexo da Especificação (ZIP)</div>
											<div class="download">
												<svg class="css-i6dzq1" stroke-linejoin="round" stroke-linecap="round" fill="none" stroke-width="2" stroke="currentColor" height="24" width="24" viewbox="0 0 24 24">
													<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
													<polyline points="7 10 12 15 17 10"></polyline>
													<line y2="3" x2="12" y1="15" x1="12"></line>
												</svg>
											</div>
										</button>
									</li>

								</ul>

							</div>
						{% endif %}

						{% if s.docTest != null %}
							<div class="col-md-3 mb-3">
								<label>Anexo do teste</label><br>
								<button onclick="location.href='{{ asset('assets/') }}{{m.id}}/{{s.docTest}}'" class="download-button">
									<div class="docs">
										<svg class="css-i6dzq1" stroke-linejoin="round" stroke-linecap="round" fill="none" stroke-width="2" stroke="currentColor" height="20" width="20" viewbox="0 0 24 24">
											<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
											<polyline points="14 2 14 8 20 8"></polyline>
											<line y2="13" x2="8" y1="13" x1="16"></line>
											<line y2="17" x2="8" y1="17" x1="16"></line>
											<polyline points="10 9 9 9 8 9"></polyline>
										</svg>Anexo do teste</div>
									<div class="download">
										<svg class="css-i6dzq1" stroke-linejoin="round" stroke-linecap="round" fill="none" stroke-width="2" stroke="currentColor" height="24" width="24" viewbox="0 0 24 24">
											<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
											<polyline points="7 10 12 15 17 10"></polyline>
											<line y2="3" x2="12" y1="15" x1="12"></line>
										</svg>
									</div>
								</button>
							</div>


						{% endif %}

						{% if s.docClient != null %}
							<div class="col-md-3 mb-3">
								<label>Anexo do Cliente</label><br>
								<button onclick="location.href='{{ asset('assets/') }}{{m.id}}/{{s.docClient}}'" class="download-button">
									<div class="docs">
										<svg class="css-i6dzq1" stroke-linejoin="round" stroke-linecap="round" fill="none" stroke-width="2" stroke="currentColor" height="20" width="20" viewbox="0 0 24 24">
											<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
											<polyline points="14 2 14 8 20 8"></polyline>
											<line y2="13" x2="8" y1="13" x1="16"></line>
											<line y2="17" x2="8" y1="17" x1="16"></line>
											<polyline points="10 9 9 9 8 9"></polyline>
										</svg>Anexo do Cliente</div>
									<div class="download">
										<svg class="css-i6dzq1" stroke-linejoin="round" stroke-linecap="round" fill="none" stroke-width="2" stroke="currentColor" height="24" width="24" viewbox="0 0 24 24">
											<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
											<polyline points="7 10 12 15 17 10"></polyline>
											<line y2="3" x2="12" y1="15" x1="12"></line>
										</svg>
									</div>
								</button>
							</div>
						{% endif %}
					</div>
					<hr style="width: 100%; margin-top: 10px; margin-bottom: 10px;">
				{% endfor %}
		{% endif %}
	</div>

	<script type="text/babel">
		const dropContainer = document.getElementById("dropcontainer")
																		  const fileInput = document.getElementById("mudancas_gestor_software_docs")
																		
																		  dropContainer.addEventListener("dragover", (e) => {
																		    // prevent default to allow drop
																		    e.preventDefault()
																		  }, false)
																		
																		  dropContainer.addEventListener("dragenter", () => {
																		    dropContainer.classList.add("drag-active")
																		  })
																		
																		  dropContainer.addEventListener("dragleave", () => {
																		    dropContainer.classList.remove("drag-active")
																		  })
																		
																		  dropContainer.addEventListener("drop", (e) => {
																		    e.preventDefault()
																		    dropContainer.classList.remove("drag-active")
																		    fileInput.files = e.dataTransfer.files
																		  })

	</script>
	<script>

		$(document).ready(function () {
$('#mudancas_software_devs_developers').chosen({});
$('#mudancas_software_testers_testers').chosen({});
$('#mudancas_software_testers_ti_testersti').chosen({});

document.getElementById("mudancas_software_devs_developers_chosen").style.width = "400px";
document.getElementById("mudancas_software_testers_testers_chosen").style.width = "400px";
document.getElementById("mudancas_software_testers_ti_testersti_chosen").style.width = "400px";
});


    document.getElementById("scrollButton").addEventListener("click", function() {
        var currentScroll = document.documentElement.scrollTop || document.body.scrollTop;

        // Check if near the top
        if (currentScroll < 200) {
            // Scroll to the bottom
            window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
        } else {
            // Scroll to the top
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }
    });

    // Update button visibility on scroll
    window.onscroll = function() {
        var currentScroll = document.documentElement.scrollTop || document.body.scrollTop;
        var scrollButton = document.getElementById("scrollButton");

        if (currentScroll < 100) {
            // Show the button when near the top
            scrollButton.style.opacity = "0";
        } else {
            // Show the button when scrolling down
            scrollButton.style.opacity = "1";
        }
    };

var i = 0;
var array = ["OK", "FALHA"];
var i = 0;


if (i === 0) {
document.getElementById("btnSubsq").style.display = 'none';

}


function myFunction() {
i++;

document.getElementById("btAddRe").style.display = 'none';
{% set doc = '1' %}
const test = document.createElement("div");
test.setAttribute('id', i + 'test');
test.setAttribute('class', 'row col-md-12 mb-3 d-flex justify-content-between');
document.getElementById('test2').appendChild(test);


const div = document.createElement("div");
div.setAttribute('id', i + 'div');
div.setAttribute('class', 'col-md-3 mb-3');
document.getElementById(i + 'test').appendChild(div);

const label = document.createElement('label');
label.setAttribute('for', i);
label.innerHTML = "Requisitos";
document.getElementById(i + 'div').appendChild(label);
// 'class':'form-control'
const node = document.createElement("input");
node.setAttribute('class', 'form-control');
node.setAttribute('id', i);
node.setAttribute('name', i);
document.getElementById(i + 'div').appendChild(node);


const div3 = document.createElement("div");
div3.setAttribute('id', i + 'div3');
div3.setAttribute('class', 'col-md-3 mb-3');
document.getElementById(i + 'test').appendChild(div3);

const label3 = document.createElement('label');
label3.setAttribute('for', i + 'desc');
label3.innerHTML = "Comentário";
document.getElementById(i + 'div3').appendChild(label3);

const br = document.createElement('br');
document.getElementById(i + 'div3').appendChild(br);

const node3 = document.createElement("input");
node3.setAttribute('id', i + 'desc');
node3.setAttribute('name', i + 'desc');
node3.setAttribute('class', 'form-control');
document.getElementById(i + 'div3').appendChild(node3);


const div2 = document.createElement("div");
div2.setAttribute('id', i + 'div2');
div2.setAttribute('class', 'col-md-6 mb-3');
document.getElementById(i + 'test').appendChild(div2);

const label2 = document.createElement('label');
label2.setAttribute('for', i + 'test');
label2.innerHTML = "Data de Levantamento";
document.getElementById(i + 'div2').appendChild(label2);

const node2 = document.createElement("input");
node2.setAttribute('id', i + 'date');
node2.setAttribute('name', i + 'date');
node2.setAttribute('type', 'date');
node2.setAttribute('lang', 'pt-BR');
node2.setAttribute('class', 'date form-control');
document.getElementById(i + 'div2').appendChild(node2);


const div4 = document.createElement("div");
div4.setAttribute('id', i + 'div4');
div4.setAttribute('class', 'col-md-6 mb-3');
document.getElementById(i + 'test').appendChild(div4);

const label4 = document.createElement('label');
label4.setAttribute('for', i + 'file');
label4.innerHTML = "Anexo de Especificação";
document.getElementById(i + 'div4').appendChild(label4);


const node4 = document.createElement("input");
node4.setAttribute('id', i + 'file');
node4.setAttribute('name', i + 'file[]');
node4.setAttribute('type', 'file');
node4.setAttribute('style', 'width:100%');
node4.setAttribute('multiple', 'multiple');
document.getElementById(i + 'div4').appendChild(node4);

const div5 = document.createElement("div");
div5.setAttribute('id', i + 'div5');
div5.setAttribute('class', 'col-md-6 mb-3');
document.getElementById(i + 'test').appendChild(div5);

const label5 = document.createElement('label');
label5.setAttribute('for', i + 'files');
label5.innerHTML = "Anexo do Teste";
document.getElementById(i + 'div5').appendChild(label5);

const node5 = document.createElement("input");
node5.setAttribute('id', i + 'files');
node5.setAttribute('name', i + 'files');
node5.setAttribute('type', 'file');
node5.setAttribute('style', 'width:100%');
document.getElementById(i + 'div5').appendChild(node5);

if (i === 1) {
document.getElementById("btnSubsq").style.display = 'inline';
}
var addButtonElement = document.getElementById('btnnnnn');
addButtonElement.style.display = 'none';
}
	</script>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.pt-BR.min.js"></script>

	<script>
		$(".date").datepicker({format: "dd-mm-yyyy", language: "pt-BR", zIndexOffset: 999999});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function (){ {% if muds.iniciar is null %}
openCard(); // Open the card
{% endif %}
});

function openCard() { // Get a reference to the dialog element
var dialog = document.getElementById("dialog");

// Check if the dialog exists before attempting to open it
if (dialog) { // Open the dialog
dialog.showModal();

// Add a class to apply the styles
dialog.classList.add("custom-dialog");

// Add a cancel button event listener
var cancelButton = document.getElementById("cancelButton");
if (cancelButton) {
cancelButton.addEventListener("click", function () { // Close the dialog
dialog.close();
});
}

// Handle the back button click
window.addEventListener("popstate", function (event) { // Close the dialog
dialog.close();
});

// Add a state to the browser history
history.pushState({
dialogOpen: true
}, "");
}
}
	</script>
{% endblock %}
