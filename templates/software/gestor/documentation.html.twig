{% extends 'base.html.twig' %}

{% block title %}Hello GestorController!
{% endblock %}

{% block body %}

	<style>
		@import url('https://unpkg.com/open-props/open-props.min.css');
		@import url('https://unpkg.com/open-props/normalize.min.css');

		#main {
			box-sizing: border-box;
		}

		#ul {
			padding: 0;
			display: inline-grid;
			grid-auto-flow: column;
			list-style-type: none;
			grid-template-columns: auto repeat(3, calc((var(--active, 0) * 200px) + 10px));
			transition: grid-template-columns 0.35s var(--ease-elastic-1);
		}

		#main {
			width: 66ch;
		}

		#li {
			display: grid;
			justify-content: end;
			z-index: calc(var(--count) - var(--index));
		}

		#nav {
			position: relative;
		}

		#nav > #button {
			position: absolute;
			left: 0;
			background: red;
			z-index: var(--count);
		}

		#a {
			background: hsl(0 0% 20% / 0.18);
			display: inline-block;
			padding: var(--size-2) var(--size-4);
			border-radius: var(--radius-5);
			margin: 0;
			color: var(--blue-0);
			font-size: var(--font-size-1);
			font-weight: var(--font-weight-0);
			backdrop-filter: blur(40px);
			transition: color 0.2s, background 0.2s;
		}

		#a:visited {
			color: var(--green-0);
		}

		#svg {
			height: 24px;
			aspect-ratio: 1;
			fill: currentColor;
		}

		#span {
			display: grid;
			align-items: center;
			grid-auto-flow: column;
			grid-template-columns: 16px 1fr;
			gap: 0.25rem;
		}

		#li:is(:nth-of-type(2), :nth-of-type(3),:nth-of-type(4)) span {
			opacity: var(--active, 0);
			color: var(--blue-12);
		}

		#li:is(:nth-of-type(2), :nth-of-type(1), :nth-of-type(3), :nth-of-type(4)) #a:is(:hover, :focus) {
			background: var(--blue-0);
			color: var(--blue-12);
		}

		#a:focus-visible {
			outline-color: transparent;
		}

		#ul:is(:focus-within, :hover) {
			--active: 1;
		}

		.chosen-container-multi .chosen-choices {
			/*blah blah*/
			width: 400px;
		}


		.chosen-drop {
			/* less specificity, this style might not work  */
			width: 400px;
		}
	</style>

	{{ include('flowBoard.html.twig') }}


	{% if muds.iniciar is null %}
		<dialog
			id="dialog">
			<!-- Dialog content goes here -->

			{{ form_start(formInit, { 'attr': {'class':'form-group', 'id':'test'}}) }}
			<!-- Form fields go here -->
			<button class="btn btn-info mt-2 text-white" style="background-color: #0c2c01; border-color: #0c2c01;">
				Enviar
			</button>
			<a id="cancelButton">Cancel</a>
			{{ form_end(formInit) }}
		</dialog>
	{% endif %}

	<script>
		document.addEventListener("DOMContentLoaded", function () { // Check if the dialog should be opened (replace 'm.iniciar' with the appropriate condition)
{% if muds.iniciar is null %}
// Open the dialog
openDialog();{% endif %}
});

function openDialog() { // Get a reference to the dialog element
var dialog = document.getElementById("dialog");

// Check if the dialog exists before attempting to open it
if (dialog) { // Open the dialog
dialog.showModal();

// Add a class to apply the styles
dialog.classList.add("custom-dialog");

// Add a cancel button event listener
var cancelButton = document.getElementById("cancelButton");
if (cancelButton) {
cancelButton.addEventListener("click", function () { // Close the dialog
dialog.close();
});
}

// Handle the back button click
window.addEventListener("popstate", function (event) { // Close the dialog
dialog.close();
});

// Add a state to the browser history
history.pushState({
dialogOpen: true
}, "");
}
}
	</script>

{% endblock %}
